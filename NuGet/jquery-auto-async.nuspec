<?xml version="1.0"?>
<package xmlns="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd">
  <metadata>
    <id>Candor.jQuery.AutoAsync</id>
    <version>4.0.0.50129</version>
    <authors>Michael Lang</authors>
    <owners>Nexul Software LLC, Michael Lang</owners>
    <copyright>Copyright 2013 Michael Lang</copyright>
    <projectUrl>https://github.com/michael-lang/jquery-auto-async/</projectUrl>
    <licenseUrl>https://github.com/michael-lang/jquery-auto-async/blob/master/MIT-LICENSE.txt</licenseUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
	<title>Auto Async UI</title>
    <description>automatically enhances elements based on data-attributes or class names.  supports an asynchronous user interface.  This code is open source.</description>
    <releaseNotes>Changes:
	4.0.0: * New Plugins: listbuildersource, changeupdate, enhancelist, wizard, and carousel (for boostrapper carousels).
	* Lots of new use cases enabled with new options in data attributes and in ajax json responses.  See the related github commit comment for more details.  https://github.com/michael-lang/jquery-auto-async/commit/d16cbdc3847de4545a52123d28949c8d829f63d5
	3.5.0: * form post can now handle multi-part forms with mixed file uploads and normal form fields.  Fallback to prior behavior when forms do not have the enctype='multipart/form-data'
	3.4.0: * datarepeater elements will now call 'enhance' on each item after adding to the repeat container.
	* the main button click method AJAX post response will now recognize a Web API style response if a JSON object response object does not contain a 'success' property.  A 'success' property will trigger fallback to current functionality of expecting a property named 'item'.  A non-JSON string response will still be treated as replacement html. These changes are backwards compatible.
	3.3.0: * Fix potential null reference error preparing data to post after button click
	3.2.0: * AJAX posted JSON object now removes data objects that are jQuery objects/widgets or functions (from button data attribute fall-back introduced in 3.1.0)
	3.1.0: * post function will now use a Web API error response text for display to user, with fall-back to prior message logic.
	* added datepicker plugin
	* fix autocomplete and listbuilder async plugin for proper widget use
	* consistent casing checks on form method
	* on button click, the JSON data used has a final fall-back value of the button's data attributes instead of null.
	* on view template toggle, it better handles the case of when 'cancel' type actions were for an add that should not toggle or if for an edit that should toggle back to a view.
	3.0.0: * renamed method 'enhanceCallback' to 'addCallback'
	* removed obsolete methods and plugins
	* added template-dialog and inline-editable-host-updater plugins
	2.1.0: * add 'autoaync.refreshEditable' method - reloads items in an ".inline-editable-host" or an item repeater on demand.  The url of the host removes any parameters in the url for that get/post that are defined as data attributes on the button.
	* add 'autoasync.urlRemoveParams' method (used by refreshEditable) .
	* autoasync.clickButton added an automatic complete callback to refreshEditable on any element selectors defined in a 'data-host-selector' attribute of the button.
	* 'inline-editable-button' elements can now be anywhere within an enhanced element. It can specify an 'data-editable-container' as an alternate to being in an '.inline-editable-host"
	</releaseNotes>
    <tags>candor jquery asynchronous</tags>
    <dependencies>
      <dependency id="jQuery" version="1.7.1.1" />
      <dependency id="jQuery.UI.Combined" version="1.8.20.1" />
      <dependency id="jQuery.Validation" version="1.9.0.1" />
      <dependency id="form2js" version="1.0.0.30224" />
    </dependencies>
  </metadata>
</package>